name: Deploy New Backend

on:
  push:
    branches: ['new-backend']
    paths:
      - idea/data-storage/**
      - idea/api-gateway/**
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}


jobs:
  wait-previous-run:
    runs-on: ubuntu-latest
    steps:
      - uses: mktcode/consecutive-workflow-action@v1 # please read security note
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  build-data-storage-image-staging:
    runs-on: ubuntu-latest
    needs: [wait-previous-run]
    environment: staging
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the github container registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Data Storage Docker image
        uses: docker/build-push-action@master
        with:
          file: idea/data-storage/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-data-storage:new

  build-api-gateway-image-staging:
    runs-on: ubuntu-latest
    needs: [wait-previous-run]
    environment: staging
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the github container registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Api Gateway Docker image
        uses: docker/build-push-action@master
        with:
          file: idea/api-gateway/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api-gateway:new
          
  purge-k8s-test-env:
    needs:
      [
        build-and-push-data-storage-image,
        build-and-push-api-gateway-image,
        wait-previous-run,
      ]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to k8s
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: rollout restart deployment api-gateway -n $KUBE_NAMESPACE

      - name: Check k8s deployments
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: get deployment -o name -n $KUBE_NAMESPACE | xargs -n1 -t kubectl rollout status -n $KUBE_NAMESPACE --timeout=120s

      - name: Deploy to k8s data-storage
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: rollout restart deployment data-storage -n $KUBE_NAMESPACE

      - name: Check k8s deployment data-storage
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: rollout status deployment data-storage -n $KUBE_NAMESPACE --timeout=120s

  run-e2e-tests:
    if: github.event.pull_request.draft == false
    needs: [purge-k8s-test-env, wait-previous-run]
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install NodeJS 16.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 16.x

      - name: Prepare&Run Tests
        working-directory: idea/tests
        env:
          #API_ENDPOINT: ${{ secrets.API_ADDRESS_URL_NEW_BE }}
          #WS_PROVIDER: ${{ secrets.WS_PROVIDER_URL_NEW_BE }}
          TEST_ENV: ${{ secrets.TEST_ENV }}
        run: |
          YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install
          yarn test
