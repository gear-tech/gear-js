name: 'CI-CD create-gear-app'

on:
  push:
    branches: [master]
    paths:
      - utils/create-gear-app/**

jobs:
  cga-publish-to-npm:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use node 17.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 17.x

      - name: Check package version
        uses: EndBug/version-check@v1
        id: check
        with:
          file-name: utils/create-gear-app/package.json
          file-url: https://unpkg.com/create-gear-app@latest/package.json
          static-checking: localIsNew

      - name: Publish
        if: steps.check.outputs.changed == 'true'
        working-directory: utils/create-gear-app
        run: |
          export token=$(printenv $(printenv GITHUB_ACTOR))
          npm config set //registry.npmjs.org/:_authToken=$token
          npm publish
        env:
          osipov-mit: ${{ secrets.OSIPOV_NPM_TOKEN }}
          nikitayutanov: ${{ secrets.YUTANOV_NPM_TOKEN }}

  template-publish-to-npm:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use node 17.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 17.x

      - name: Check package version
        uses: EndBug/version-check@v1
        id: check
        with:
          file-name: utils/create-gear-app/gear-app-template/package.json
          file-url: https://unpkg.com/@gear-js/cra-template-gear-app@latest/package.json
          static-checking: localIsNew

      - name: Publish
        if: steps.check.outputs.changed == 'true'
        working-directory: utils/create-gear-app/gear-app-template
        run: |
          export token=$(printenv $(printenv GITHUB_ACTOR))
          npm config set //registry.npmjs.org/:_authToken=$token
          npm publish
        env:
          osipov-mit: ${{ secrets.OSIPOV_NPM_TOKEN }}
          nikitayutanov: ${{ secrets.YUTANOV_NPM_TOKEN }}
