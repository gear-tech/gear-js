name: CD new backend

on: [workflow_dispatch]

env:
  CARGO_TERM_COLOR: always

jobs:
  Build-backend-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.TEST_DOCKERHUB_USERNAME }}
          password: ${{ secrets.TEST_DOCKERHUB_TOKEN }}

      - name: Build and push data-storage
        id: data_storage_docker_build
        uses: docker/build-push-action@v2
        with:
          file: website/data-storage/Dockerfile
          push: true
          tags: mithriy/gear-data-storage:nightly

      - name: Build and push api-backend
        id: api_backend_docker_build
        uses: docker/build-push-action@v2
        with:
          file: website/api-backend/Dockerfile
          push: true
          tags: mithriy/gear-api-backend:nightly

  Deploy:
    needs: Build-backend-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        env:
          KAFKA_PORT: ${{ secrets.KAFKA_PORT}}
          KAFKA_HOST_NAME: ${{ secrets.HOST }}
          API_BACKEND_KAFKA_CLIENT_ID: ${{ API_BACKEND_KAFKA_CLIENT_ID }}
          API_BACKEND_KAFKA_GROUP_ID: ${{ API_BACKEND_KAFKA_GROUP_ID }}
          API_BACKEND_PORT: ${{ secrets.API_BACKEND_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DATA_STORAGE_KAFKA_CLIENT_ID: ${{secrets.DATA_STORAGE_KAFKA_CLIENT_ID}}
          DATA_STORAGE_KAFKA_GROUP_ID: ${{secrets.DATA_STORAGE_KAFKA_GROUP_ID}}

        with:
          directory: ./ansible
          playbook: new-backend.yaml
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          inventory: |
            [all]
            ${{secrets.TEST_GEAR_BACKEND}}
          requirements: galaxy-requirements.yml
