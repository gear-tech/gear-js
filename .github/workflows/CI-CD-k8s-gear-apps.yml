name: Deploy Gear-apps to k8s stage/prod

on:
  push:
    branches: ['master']
    paths:
      - apps/**
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: prod-gear-apps

jobs:
  wait-previous-run:
    runs-on: ubuntu-latest
    steps:
      - uses: mktcode/consecutive-workflow-action@v1 # please read security note
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  conditional_job_check_files:
    runs-on: ubuntu-latest
    # Declare outputs for next jobs
    outputs:
      nft_changed: ${{ steps.check_file_changed.outputs.nft_changed }}
      marketplace_changed: ${{ steps.check_file_changed.outputs.marketplace_changed }}
      lottery_changed: ${{ steps.check_file_changed.outputs.lottery_changed }}
      escrow_changed: ${{ steps.check_file_changed.outputs.escrow_changed }}
    steps:
    - uses: actions/checkout@v2
      with:
        # Checkout as many commits as needed for the diff
        fetch-depth: 2
    - shell: pwsh
      id: check_file_changed
      run: |
        # Diff HEAD with the previous commit
        $diff = git diff --name-only HEAD^ HEAD

        # Check if a file under nft/ has changed (added, modified, deleted)
        $SourceDiffNft = $diff | Where-Object { $_ -match '^apps/nft/' }
        $HasDiffNft = $SourceDiffNft.Length -gt 0

        # Check if a file under marketplace/ has changed (added, modified, deleted)
        $SourceDiffMarketplace = $diff | Where-Object { $_ -match '^apps/marketplace/' }
        $HasDiffMarketplace = $SourceDiffMarketplace.Length -gt 0

        # Check if a file under lottery/ has changed (added, modified, deleted)
        $SourceDiffLottery = $diff | Where-Object { $_ -match '^apps/lottery/' }
        $HasDiffLottery = $SourceDiffLottery.Length -gt 0

        # Check if a file under escrow/ has changed (added, modified, deleted)
        $SourceDiffEscrow = $diff | Where-Object { $_ -match '^apps/escrow/' }
        $HasDiffEscrow = $SourceDiffEscrow.Length -gt 0

        # Set the output named "nft_changed"
        Write-Host "::set-output name=nft_changed::$HasDiffNft"
        Write-Host "::set-output name=marketplace_changed::$HasDiffMarketplace"
        Write-Host "::set-output name=lottery_changed::$HasDiffLottery"
        Write-Host "::set-output name=escrow_changed::$HasDiffEscrow"

  build-and-push-marketplace-image:
    runs-on: ubuntu-latest
    needs: [wait-previous-run,conditional_job_check_files]
    if: needs.conditional_job_check_files.outputs.marketplace_changed == 'True'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the github container registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push MarketPlace Docker image
        uses: docker/build-push-action@master
        with:
          context: apps/marketplace
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-marketplace:prod
          build-args: |
            REACT_APP_NODE_ADDRESS=${{ secrets.REACT_APP_NODE_ADDRESS }}
            REACT_APP_IPFS_ADDRESS=${{ secrets.REACT_APP_IPFS_ADDRESS }}
            REACT_APP_MARKETPLACE_NFT_CONTRACT_ADDRESS=${{ secrets.REACT_APP_MARKETPLACE_NFT_CONTRACT_ADDRESS }}
            REACT_APP_MARKETPLACE_CONTRACT_ADDRESS=${{ secrets.REACT_APP_MARKETPLACE_CONTRACT_ADDRESS }}
            REACT_APP_IPFS_GATEWAY_ADDRESS=${{ secrets.REACT_APP_IPFS_GATEWAY_ADDRESS }}

  build-and-push-nft-image:
    runs-on: ubuntu-latest
    needs: [wait-previous-run,conditional_job_check_files]
    if: needs.conditional_job_check_files.outputs.nft_changed == 'True'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the github container registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Nft Docker image
        uses: docker/build-push-action@master
        with:
          context: apps/nft
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-nft:prod
          build-args: |
            REACT_APP_NODE_ADDRESS=${{ secrets.REACT_APP_NODE_ADDRESS }}
            REACT_APP_IPFS_ADDRESS=${{ secrets.REACT_APP_IPFS_ADDRESS }}
            REACT_APP_NFT_CONTRACT_ADDRESS=${{ secrets.REACT_APP_NFT_CONTRACT_ADDRESS }}
            REACT_APP_IPFS_GATEWAY_ADDRESS=${{ secrets.REACT_APP_IPFS_GATEWAY_ADDRESS }}


  build-and-push-lottery-image:
    runs-on: ubuntu-latest
    needs: [wait-previous-run,conditional_job_check_files]
    if: needs.conditional_job_check_files.outputs.lottery_changed == 'True'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the github container registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Lottery Docker image
        uses: docker/build-push-action@master
        with:
          context: apps/lottery
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-lottery:prod
          build-args: |
            REACT_APP_NODE_ADDRESS=${{ secrets.REACT_APP_NODE_ADDRESS }}
            REACT_APP_LOTTERY_CONTRACT_ADDRESS=${{ secrets.REACT_APP_LOTTERY_CONTRACT_ADDRESS }}

  build-and-push-escrow-image:
    runs-on: ubuntu-latest
    needs: [wait-previous-run,conditional_job_check_files]
    if: needs.conditional_job_check_files.outputs.escrow_changed == 'True'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the github container registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Escrow Docker image
        uses: docker/build-push-action@master
        with:
          context: apps/escrow
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-escrow:prod
          build-args: |
            REACT_APP_NODE_ADDRESS=${{ secrets.REACT_APP_NODE_ADDRESS }}

       
  deploy-marketplace-k8s:
    needs: [ build-and-push-marketplace-image, wait-previous-run]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to k8s
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: rollout restart deployment marketplace -n $KUBE_NAMESPACE

      - name: Check k8s deployments
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: get deployment -o name -n $KUBE_NAMESPACE | xargs -n1 -t kubectl rollout status -n $KUBE_NAMESPACE --timeout=120s

  deploy-nft-k8s:
    needs: [ build-and-push-nft-image, wait-previous-run]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to k8s
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: rollout restart deployment nft -n $KUBE_NAMESPACE

      - name: Check k8s deployments
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: get deployment -o name -n $KUBE_NAMESPACE | xargs -n1 -t kubectl rollout status -n $KUBE_NAMESPACE --timeout=120s

  deploy-lottery-k8s:
    needs: [ build-and-push-lottery-image, wait-previous-run]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to k8s
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: rollout restart deployment lottery -n $KUBE_NAMESPACE

      - name: Check k8s deployments
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: get deployment -o name -n $KUBE_NAMESPACE | xargs -n1 -t kubectl rollout status -n $KUBE_NAMESPACE --timeout=120s

  deploy-escrow-k8s:
    needs: [ build-and-push-escrow-image, wait-previous-run]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to k8s
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: rollout restart deployment escrow -n $KUBE_NAMESPACE

      - name: Check k8s deployments
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: get deployment -o name -n $KUBE_NAMESPACE | xargs -n1 -t kubectl rollout status -n $KUBE_NAMESPACE --timeout=120s
