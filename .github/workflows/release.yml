name: 'Release'

on:
  push:
    branches: [main]
    paths:
      - apis/gear/**
      - tools/txwrapper/package.json
      - utils/gear-hooks/package.json
      - utils/gear-ui/package.json
      - utils/vara-ui/package.json
      - utils/frontend-configs/package.json
      - utils/wallet-connect/package.json
  workflow_dispatch:

env:
  BINARYEN_VERSION: version_111

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      gear-api: ${{ steps.gear-api.outputs.changed }}
      gear-hooks: ${{ steps.gear-hooks.outputs.changed }}
      gear-ui: ${{ steps.gear-ui.outputs.changed }}
      vara-ui: ${{ steps.vara-ui.outputs.changed }}
      frontend-configs: ${{ steps.frontend-configs.outputs.changed }}
      wallet-connect: ${{ steps.wallet-connect.outputs.changed }}
      gear-api-code-modified: ${{ steps.gear-api-code-modified.outputs.code-changed }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check gear-api version
        id: gear-api
        uses: ./.github/actions/version-changed
        with:
          package-name: "@gear-js/api"
          path: "apis/gear/package.json"

      - name: Check gear-hooks version
        id: gear-hooks
        uses: ./.github/actions/version-changed
        with:
          package-name: "@gear-js/react-hooks"
          path: "utils/gear-hooks/package.json"

      - name: Check gear-ui version
        id: gear-ui
        uses: ./.github/actions/version-changed
        with:
          package-name: "@gear-js/ui"
          path: "utils/gear-ui/package.json"

      - name: Check vara-ui version
        id: vara-ui
        uses: ./.github/actions/version-changed
        with:
          package-name: "@gear-js/vara-ui"
          path: "utils/vara-ui/package.json"

      - name: Check frontend-configs version
        id: frontend-configs
        uses: ./.github/actions/version-changed
        with:
          package-name: "@gear-js/frontend-configs"
          path: "utils/frontend-configs/package.json"

      - name: Check wallet-connect version
        id: wallet-connect
        uses: ./.github/actions/version-changed
        with:
          package-name: "@gear-js/wallet-connect"
          path: "utils/wallet-connect/package.json"

      - name: Check if gear-api-code has been modified
        id: gear-api-code-modified
        uses: dorny/paths-filter@v2
        with:
          filters: |
            code-changed:
              - 'apis/gear/src/**'

  publish-to-npm:
    needs: check-changes
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Authenticate with NPM
        run: echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish gear-api
        if: ${{ needs.check-changes.outputs.gear-api == 'true' }}
        run: npm publish --access=public
        working-directory: apis/gear
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish gear-hooks
        if: ${{ needs.check-changes.outputs.gear-hooks == 'true' }}
        run: npm publish --access=public
        working-directory: utils/gear-hooks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish gear-ui
        if: ${{ needs.check-changes.outputs.gear-ui == 'true' }}
        run: npm publish --access=public
        working-directory: utils/gear-ui
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish vara-ui
        if: ${{ needs.check-changes.outputs.vara-ui == 'true' }}
        run: npm publish --access=public
        working-directory: utils/vara-ui
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish frontend-configs
        if: ${{ needs.check-changes.outputs.frontend-configs == 'true' }}
        run: npm publish --access=public
        working-directory: utils/frontend-configs
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish wallet-connect
        if: ${{ needs.check-changes.outputs.wallet-connect == 'true' }}
        run: npm publish --access=public
        working-directory: utils/wallet-connect
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


  create-github-release:
    needs: [publish-to-npm, check-changes]
    if: ${{ needs.check-changes.outputs.gear-api == 'true' || needs.check-changes.outputs.gear-api-code-modified == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build:gear-api

      - name: Prepare artifact
        working-directory: apis/gear
        run: yarn run pack

      - name: Get @gear-js/api version
        id: get-version
        run: |
          VERSION=$(node -p "require('./apis/gear/package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract Changelog
        id: changelog
        run: |
          if [[ "${{ needs.check-changes.outputs.gear-api }}" == "true" ]]; then
            VERSION="${{ steps.get-version.outputs.version }}"
            CHANGELOG=$(awk '/## \['$VERSION'\]/{flag=1;next}/## \[/{flag=0}flag{print}' apis/gear/CHANGELOG.md)
          else
            CHANGELOG=$(awk '/## \[draft\]/{flag=1;next}/## \[/{flag=0}flag{print}' apis/gear/CHANGELOG.md)
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check-changes.outputs.gear-api == 'true' && format('gear-js-api-v{0}', steps.get-version.outputs.version) || 'gear-js-api-draft' }}
          name: ${{ needs.check-changes.outputs.gear-api == 'true' && format('@gear-js/api v{0}', steps.get-version.outputs.version) || '@gear-js/api Draft Release' }}
          body: |
            # ${{ needs.check-changes.outputs.version-changed == 'true' && format('@gear-js/api v{0}', steps.get-version.outputs.version) || '@gear-js/api Draft Release' }}

            ${{ steps.changelog.outputs.changelog }}
          draft: ${{ needs.check-changes.outputs.gear-api != 'true' }}
          prerelease: ${{ needs.check-changes.outputs.gear-api != 'true' }}
          files: artifacts/gear-js-api.tgz
          make_latest: ${{ needs.check-changes.outputs.gear-api == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
