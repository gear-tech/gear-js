name: Deploy to prod k8s

on:
  workflow_run:
    workflows: [Build and Deploy All containers to k8s]
    types: [completed]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: prod-gear-js



jobs:

  wait-previous-run:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: mktcode/consecutive-workflow-action@v1 # please read security note
        with:
          token: ${{ secrets.GITHUB_TOKEN }}


  deploy-to-k8s-prod:
    needs:
      [ wait-previous-run ]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to k8s prod
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: rollout restart deployment data-storage -n $KUBE_NAMESPACE

  check-k8s-deployments:
    needs: [deploy-to-k8s-prod, wait-previous-run]
    runs-on: ubuntu-latest

    steps:
      - name: Check k8s deployments
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: get deployment -o name -n $KUBE_NAMESPACE | xargs -n1 -t kubectl rollout status -n $KUBE_NAMESPACE --timeout=120s
