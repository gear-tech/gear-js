name: Build and Deploy MarketPlace to k8s

on:
  push:
    branches: ['master']
    paths:
      - apps/marketplace/**
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: prod-gear-apps

jobs:
  wait-previous-run:
    runs-on: ubuntu-latest
    steps:
      - uses: mktcode/consecutive-workflow-action@v1 # please read security note
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-marketplace-image:
    runs-on: ubuntu-latest
    needs: [wait-previous-run]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the github container registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push MarketPlace Docker image
        uses: docker/build-push-action@master
        with:
          context: apps/marketplace
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-marketplace:qa
          build-args: |
            REACT_APP_NODE_ADDRESS=${{ secrets.REACT_APP_NODE_ADDRESS }}
            REACT_APP_IPFS_ADDRESS=${{ secrets.REACT_APP_IPFS_ADDRESS }}
            REACT_APP_NFT_CONTRACT_ADDRESS=${{ secrets.REACT_APP_NFT_CONTRACT_ADDRESS }}
            REACT_APP_MARKETPLACE_CONTRACT_ADDRESS=${{ secrets.REACT_APP_MARKETPLACE_CONTRACT_ADDRESS }}
        
       
  deploy-to-k8s:
    needs: [ build-and-push-marketplace-image, wait-previous-run]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to k8s
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: rollout restart deployment marketplace -n $KUBE_NAMESPACE

  check-k8s-deployments:
    needs: [deploy-to-k8s, wait-previous-run]
    runs-on: ubuntu-latest

    steps:
      - name: Check k8s deployments
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: get deployment -o name -n $KUBE_NAMESPACE | xargs -n1 -t kubectl rollout status -n $KUBE_NAMESPACE --timeout=120s
