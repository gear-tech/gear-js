name: AWS EKS Backup

on:
  workflow_dispatch:
    inputs:
      custom_backup_name:
        description: 'Custom name backup. Use separator - :'
        required: false
      namespaces:
        description: 'List namespaces. Use separator , :'
        required: true
      source_cluster:
        description: 'Select source cluster'
        required: true
        type: choice
        options:
          - prod
          - stg
  schedule:
    - cron: 0 1 * * *

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  VELERO_VERSION: v1.9.0
  SOURCE_CLUSTER: ${{ github.event.inputs.source_cluster || 'prod' }}
  BACKUP_NAME_FULL: ${{ github.run_number }}-${{ github.event.inputs.source_cluster || 'prod' }}---full-backup-`date +'%d-%m-%Y'`
  BACKUP_NAME_SPECIFIC: ${{ github.run_number }}-${{ github.event.inputs.source_cluster || 'prod' }}---custom-backup-`date +'%d-%m-%Y'`
    
jobs:
  backup_all_namespaces:
    name: Backup all namespaces on ${{ github.event.inputs.source_cluster || 'prod' }}
    if: ${{ github.event.inputs.namespaces == 'All' || github.event.schedule == '0 1 * * *' }}
    runs-on: ubuntu-latest
    steps:
      - uses: hashicorp/vault-action@v2.4.1
        with:
          url: ${{ secrets.VAULT_URL }}
          tlsSkipVerify: true
          method: github
          githubToken: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/aws/velero/${{ env.SOURCE_CLUSTER }} aws_access_key_id ;
            kv/aws/velero/${{ env.SOURCE_CLUSTER }} aws_secret_access_key ;
            kv/aws/velero/${{ env.SOURCE_CLUSTER }} aws_eks_region ;
            kv/aws/velero/${{ env.SOURCE_CLUSTER }} aws_eks_cluster

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_EKS_REGION }}

      - run: |
          aws eks --region ${{ env.AWS_EKS_REGION }} update-kubeconfig --kubeconfig $HOME/.kube/config --name ${{ env.AWS_EKS_CLUSTER }}

      - run: |
          wget https://github.com/vmware-tanzu/velero/releases/download/${{ env.VELERO_VERSION }}/velero-${{ env.VELERO_VERSION }}-linux-amd64.tar.gz
          tar -xvf velero*.tar.gz
          cd ./velero-${{ env.VELERO_VERSION }}-linux-amd64
          chmod +x ./velero

      - run: |
          ./velero backup create \
          ${{ github.event.inputs.custom_backup_name || env.BACKUP_NAME_FULL }} \
          --kubeconfig $HOME/.kube/config \
          --wait
          ./velero backup describe  ${{ github.event.inputs.custom_backup_name || env.BACKUP_NAME_FULL }} --kubeconfig $HOME/.kube/config
          ./velero backup logs  ${{ github.event.inputs.custom_backup_name || env.BACKUP_NAME_FULL }} --kubeconfig $HOME/.kube/config
        working-directory: ./velero-${{ env.VELERO_VERSION }}-linux-amd64

  backup_custom_namespaces:
    name: Backup namespaces () on ${{ github.event.inputs.source_cluster || 'prod' }}
    if: ${{ github.event.inputs.namespaces != 'All' && github.event.inputs.namespaces != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: hashicorp/vault-action@v2.4.1
        with:
          url: ${{ secrets.VAULT_URL }}
          tlsSkipVerify: true
          method: github
          githubToken: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/aws/velero/${{ env.SOURCE_CLUSTER }} aws_access_key_id ;
            kv/aws/velero/${{ env.SOURCE_CLUSTER }} aws_secret_access_key ;
            kv/aws/velero/${{ env.SOURCE_CLUSTER }} aws_eks_region ;
            kv/aws/velero/${{ env.SOURCE_CLUSTER }} aws_eks_cluster

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_EKS_REGION }}

      - run: |
          aws eks --region ${{ env.AWS_EKS_REGION }} update-kubeconfig --kubeconfig $HOME/.kube/config --name ${{ env.AWS_EKS_CLUSTER }}

      - run: |
          wget https://github.com/vmware-tanzu/velero/releases/download/${{ env.VELERO_VERSION }}/velero-${{ env.VELERO_VERSION }}-linux-amd64.tar.gz
          tar -xvf velero*.tar.gz
          cd ./velero-${{ env.VELERO_VERSION }}-linux-amd64
          chmod +x ./velero

      - run: |
          ./velero backup create \
          ${{ github.event.inputs.custom_backup_name || env.BACKUP_NAME_SPECIFIC }} \
          --include-namespaces ${{ github.event.inputs.namespaces }} \
          --kubeconfig $HOME/.kube/config \
          --wait
          ./velero backup describe  ${{ github.event.inputs.custom_backup_name || env.BACKUP_NAME_SPECIFIC }} --kubeconfig $HOME/.kube/config
          ./velero backup logs  ${{ github.event.inputs.custom_backup_name || env.BACKUP_NAME_SPECIFIC }} --kubeconfig $HOME/.kube/config
        working-directory: ./velero-${{ env.VELERO_VERSION }}-linux-amd64
