export const IROUTER_ABI = [
  'function areValidators(address[] validators) view returns (bool)',
  'function codeState(bytes32 codeId) view returns (uint8)',
  'function codesStates(bytes32[] codesIds) view returns (uint8[])',
  'function createProgram(bytes32 codeId, bytes32 salt, address overrideInitializer) returns (address)',
  'function createProgramWithAbiInterface(bytes32 codeId, bytes32 salt, address overrideInitializer, address abiInterface) returns (address)',
  'function genesisBlockHash() view returns (bytes32)',
  'function genesisTimestamp() view returns (uint48)',
  'function isValidator(address validator) view returns (bool)',
  'function latestCommittedBlockHash() view returns (bytes32)',
  'function mirrorImpl() view returns (address)',
  'function programCodeId(address programId) view returns (bytes32)',
  'function programsCodeIds(address[] programsIds) view returns (bytes32[])',
  'function programsCount() view returns (uint256)',
  'function requestCodeValidation(bytes32 codeId)',
  'function signingThresholdPercentage() view returns (uint16)',
  'function validatedCodesCount() view returns (uint256)',
  'function validators() view returns (address[])',
  'function validatorsAggregatedPublicKey() view returns ((uint256 x, uint256 y))',
  'function validatorsCount() view returns (uint256)',
  'function validatorsThreshold() view returns (uint256)',
  'function validatorsVerifiableSecretSharingCommitment() view returns (bytes)',
  'function wrappedVara() view returns (address)',
  'event BlockCommitted(bytes32 hash)',
  'event CodeGotValidated(bytes32 codeId, bool indexed valid)',
  'event CodeValidationRequested(bytes32 codeId)',
  'event ComputationSettingsChanged(uint64 threshold, uint128 wvaraPerSecond)',
  'event NextEraValidatorsCommitted(uint256 startTimestamp)',
  'event ProgramCreated(address actorId, bytes32 indexed codeId)',
  'event StorageSlotChanged()',
];
