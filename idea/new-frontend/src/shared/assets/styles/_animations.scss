@use '@gear-js/ui/mixins' as *;
@use './variables' as *;

@keyframes loading {
  from {
    transform: translate(-37.5%)
  }
  to {
    transform: translate(37.5%)
  }
}

//for css transition
@mixin fade($fadeDelay: 0ms, $fadeDuration: $timeout, $triming-function: linear) {
  &:global(.exit),
  &:global(.enter-done) {
    opacity: 1;
  }

  &:global(.exit),
  &:global(.enter) {
    // remove possible transition from elements
    transition: none;
  }

  &:global(.enter),
  &:global(.exit-done){
    opacity: 0;
  } 

  &:global(.enter-active) {
    opacity: 1; 
  }

  &:global(.exit-active) {
    opacity: 0;
  }

  &:global(.exit-active),
  &:global(.enter-active){ 
    transition: opacity $fadeDuration $triming-function $fadeDelay;
  }
}

//for css transition
@mixin fadeAppear($fadeDelay: 0ms, $fadeDuration: $timeout, $triming-function: linear) {
  &:global(.appear) {
    opacity: 0;
  } 

  &:global(.appear-done),
  &:global(.enter-done) {
    opacity: 1;
  }

  &:global(.appear-active) {
    opacity: 1 !important; 
  }

  &:global(.appear-active) { 
    transition: opacity $fadeDuration $triming-function $fadeDelay;
  }
}

@mixin loading($colorFrom: $bgColorSecondary, $colorTo: $bgColorTertiary) {
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    inset: 0 -150%;
    background: linear-gradient(90deg, rgba($bgColorSecondary, 0.1) 25%,rgba($bgColorTertiary, 0.24) 37%,rgba($bgColorSecondary, 0.1) 63%);
    animation: loading $bigTimeout ease infinite;
  }
}

@mixin expand($startHeight) {
  $endHeight: calc(var(--offset-height) + $startHeight);

  height: $startHeight;
  overflow: hidden;

  &:global(.exit),
  &:global(.enter-done) {
    height: $endHeight
  }

  &:global(.exit-active),
  &:global(.enter-active) {
    @include transition();
  }
  
  &:global(.enter-active) {
    height: $endHeight
  }

  &:global(.exit-done),
  &:global(.exit-active) {
    height: $startHeight;
  }

  &:global(.enter-done) {
    overflow: auto;
  }
}