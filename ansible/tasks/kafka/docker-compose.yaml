version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_MAX_SESSION_TIMEOUT=40000
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - /home/ec2-user/data_storage_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  data-storage:
    image: mithriy/gear-data-storage:nightly
    depends_on:
      - postgres
      - kafka
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - CLIENT_ID=${KAFKA_DATA_STORAGE_CLIENT_ID}
      - GROUP_ID=${KAFKA_DATA_STORAGE_GROUP_ID}
      - KAFKA_BROKERS=${KAFKA_BROKERS}

  backend:
    ports:
      - '3001:3001'
    image: mithriy/gear-api-backend:nightly
    depends_on:
      - kafka
    environment:
      - CLIENT_ID=${KAFKA_API_BACKEND_CLIENT_ID}
      - GROUP_ID=${KAFKA_API_BACKEND_GROUP_ID}
      - BROKERS=${KAFKA_BROKERS}
      - PORT=${API_BACKEND_PORT}
