- name: 'deploy to aws'
  hosts: all
  become: yes
  remote_user: ec2-user

  #Set env vars on remote from envs on runner
  environment:
    DB_NAME: "{{ lookup('env','DB_NAME') }}"
    DB_USER: "{{ lookup('env','DB_USER') }}"
    DB_PASSWORD: "{{ lookup('env','DB_PASSWORD') }}"
    DB_PORT: "{{ lookup('env','DB_PORT') }}"
    DB_HOST: "{{ lookup('env','DB_HOST') }}"
    WS_PROVIDER: "{{ lookup('env','WS_PROVIDER') }}"
    GITHUB_CLIENT_SECRET: "{{ lookup('env','GITHUB_CLIENT_SECRET') }}"
    GITHUB_CLIENT_ID: "{{ lookup('env','GITHUB_CLIENT_ID') }}"
    TELEGRAM_BOT_TOKEN: "{{ lookup('env','TELEGRAM_BOT_TOKEN') }}"
    TELEGRAM_BOT_USERNAME: "{{ lookup('env','TELEGRAM_BOT_USERNAME') }}"
    IDE_SOCKET: "{{ lookup('env','IDE_SOCKET') }}"
    HOST: "{{ lookup('env','HOST') }}"
    IDE_FOLDER: "{{ lookup('env','IDE_FOLDER') }}"
    PORT: "{{ lookup('env','PORT') }}"
    ACCOUNT_SEED: "{{ lookup('env','ACCOUNT_SEED') }}"
    SUDO_SEED: "{{ lookup('env','SUDO_SEED') }}"
    SITE_ACCOUNT_BALANCE: "{{ lookup('env','SITE_ACCOUNT_BALANCE') }}"

  #Do tasks
  tasks:
    - name: Install and enable required packages
      include: tasks/packages/packages.yaml

    - name: Install/Update backend
      include: tasks/backend/backend.yaml

    - name: Install nginx with self-signed certs
      include: tasks/nginx/nginx.yaml

    - name: check env vars
      shell: env > env_cd
